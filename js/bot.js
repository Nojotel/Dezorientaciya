const startBot = document.querySelector(".bot__start");
const containerBot = document.querySelector(".bot__container");
const exitBot = document.querySelector(".bot--header__exit");
const userAnswerContainer = document.querySelector(".bot--body__ansercontainer--user");
let userAnswerDiv = null;
let formAdded = false;
let careerSupportClicked = false;

function openBot() {
  startBot.classList.add("hidden");
  containerBot.classList.remove("hidden");
  console.log("open");
}

function closeBot() {
  startBot.classList.remove("hidden");
  containerBot.classList.add("hidden");
  console.log("exit");
}

function createElementWithClassAndText(elementType, className, text) {
  const element = document.createElement(elementType);
  element.classList.add(className);
  element.textContent = text;
  return element;
}

function elementExists(element) {
  return element !== null && typeof element !== "undefined";
}

startBot.addEventListener("click", openBot);
exitBot.addEventListener("click", closeBot);

let backButton = null;

function toggleButtons(clickedButton) {
  const userContainer = document.querySelector(".bot__container--user");
  const buttons = document.querySelectorAll(".bot--body__button");

  if (clickedButton.classList.contains("gift-support")) {
    userAnswerContainer.innerHTML = "–û—Ç–ª–∏—á–Ω–æ! üëç –Ø —Ç–æ–∂–µ –ª—é–±–ª—é –ø–æ–¥–∞—Ä–∫–∏ üòç<br><br>–ù–æ —É –º–µ–Ω—è –µ—Å—Ç—å –≤—Å–µ–≥–æ 5 –≤–æ–ø—Ä–æ—Å–æ–≤, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫!";

    const button1 = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–Ø –ª—é–±–ª—é –ø–æ–¥–∞—Ä–∫–∏, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã!");
    const button2 = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "üîô  –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥");

    userAnswerContainer.appendChild(button1);
    userAnswerContainer.appendChild(button2);

    button1.addEventListener("click", function () {
      userAnswerContainer.innerHTML = "";

      const careerSupportBtn = document.getElementById("careerSupportBtn");
      toggleButtons(careerSupportBtn);
    });

    button2.addEventListener("click", function () {
      backButton.click();
    });

    userAnswerContainer.classList.remove("none");
    userContainer.classList.remove("none");

    buttons.forEach((button) => {
      if (button === clickedButton) {
        button.style.backgroundColor = "#E2E5DA";
      } else {
        button.style.display = "none";
      }
    });
  } else if (clickedButton.id === "careerSupportBtn" && !careerSupportClicked) {
    careerSupportClicked = true;

    const userAnswerDiv = createElementWithClassAndText("div", "ansercontainer--user__text", "–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à—É –ø—Ä–æ—Ñ–µ—Å—Å–∏—é?üëá");
    userAnswerContainer.appendChild(userAnswerDiv);

    const form = createProfessionForm();
    userAnswerContainer.appendChild(form);

    userAnswerContainer.classList.remove("none");

    buttons.forEach((button) => {
      button.style.display = button !== clickedButton ? "none" : "";
      button.style.backgroundColor = button === clickedButton ? "#E2E5DA" : "";
    });

    userContainer.classList.remove("none");
  } else {
    if (clickedButton.classList.contains("bot--body__button") && (clickedButton.textContent.trim() === "–ú–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è ü§î" || clickedButton.textContent.trim() === "–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é ‚úçÔ∏è")) {
      if (!elementExists(userAnswerDiv)) {
        userAnswerDiv = createElementWithClassAndText("div", "ansercontainer--user__text", "–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω");
        userAnswerContainer.appendChild(userAnswerDiv);
        userAnswerContainer.classList.remove("none");
      }

      if (!formAdded) {
        const form = createForm();
        userAnswerContainer.appendChild(form);
        formAdded = true;
      }

      buttons.forEach((button) => {
        button.style.display = button !== clickedButton ? "none" : "";
        button.style.backgroundColor = button === clickedButton ? "#E2E5DA" : "";
      });

      userContainer.classList.remove("none");
    }
  }
}

function createProfessionForm() {
  const form = document.createElement("form");
  form.classList.add("ansercontainer--user__2--form");
  form.id = "professionForm";

  const input = document.createElement("input");
  input.type = "text";
  input.id = "botProfession";
  input.placeholder = "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏";
  form.appendChild(input);

  const submitButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å");
  form.appendChild(submitButton);

  backButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "üîô  –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥");
  form.appendChild(backButton);

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    submitProfessionForm();
  });

  backButton.addEventListener("click", function () {
    userAnswerContainer.innerHTML = "";
    careerSupportClicked = false;
    formAdded = false;
    userAnswerContainer.classList.add("none");
    const userContainer = document.querySelector(".bot__container--user");
    userContainer.classList.add("none");
    const userContainerImg = document.querySelector(".bot__container--user .bot--header__img");
    if (userContainerImg) {
      userContainerImg.style.display = "block";
    }
    const buttons = document.querySelectorAll(".bot--body__button");
    buttons.forEach((button) => {
      button.style.display = "";
      button.style.backgroundColor = "";
    });
  });

  return form;
}

let receivedId = null;

function updateAnswerContainerText() {
  const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", "–£ –≤–∞—Å —Ö–æ—Ä–æ—à–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è. –ö–∞–∂–¥–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –æ—á–µ–Ω—å –≤–∞–∂–Ω–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ä–µ—à–∞–µ—Ç —á—å—é-—Ç–æ –ø—Ä–æ–±–ª–µ–º—É –∏ –¥–µ–ª–∞–µ—Ç –∂–∏–∑–Ω—å –ª—É—á—à–µ.<br><br>–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–æ–π —É –≤–∞—Å –æ–±—â–∏–π —Å—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã?üëá");
  const experienceForm = createExperienceForm();
  userAnswerContainer.innerHTML = "";
  userAnswerContainer.appendChild(successMessage);
  userAnswerContainer.appendChild(experienceForm);
}

async function submitProfessionForm() {
  const professionValue = document.getElementById("botProfession").value;

  console.log("Profession submitted:", professionValue);

  try {
    const getResponse = await fetch(`http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/`, {
      method: "GET",
    });

    const getData = await getResponse.json();
    console.log("GET Response data:", getData);

    receivedId = getData;
    console.log("Received id:", receivedId);

    const postResponse = await fetch("http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        profession: professionValue,
        id: receivedId,
      }),
    });

    const postData = await postResponse.json();
    console.log("POST Response data:", postData);

    if (postData) {
      updateAnswerContainerText();
      handleSuccess();
    } else {
      handleError();
    }
  } catch (error) {
    console.error("Error:", error);
    handleError();
  }
}

function createExperienceForm() {
  const form = document.createElement("form");
  form.classList.add("ansercontainer--user__2--form");
  form.id = "experienceForm";

  const input = document.createElement("input");
  input.type = "number";
  input.id = "experience";
  input.placeholder = "–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã(–ª–µ—Ç)";
  form.appendChild(input);
  input.min = "0";

  const submitButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å");
  form.appendChild(submitButton);

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    submitExperienceForm();
  });

  return form;
}

async function submitExperienceForm() {
  const experienceValue = document.getElementById("experience").value;

  console.log("Experience submitted:", experienceValue);

  try {
    const postResponse = await fetch("http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: receivedId,
        int: experienceValue,
      }),
    });

    const postData = await postResponse.json();
    console.log("POST Response data:", postData);

    if (postData) {
      handleExperienceSuccess();
    } else {
      handleExperienceError();
    }
  } catch (error) {
    console.error("Error:", error);
    handleExperienceError();
  }
}

function handleExperienceSuccess() {
  console.log("Experience form submitted successfully!");

  const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç üëç<br><br>–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –¥–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü");
  userAnswerContainer.innerHTML = "";
  userAnswerContainer.appendChild(successMessage);

  const salaryForm = createSalaryForm();
  userAnswerContainer.appendChild(salaryForm);
}

function createSalaryForm() {
  const form = document.createElement("form");
  form.classList.add("ansercontainer--user__2--form");
  form.id = "salaryForm";

  const input = document.createElement("input");
  input.type = "number";
  input.id = "salary";
  input.placeholder = "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏";
  input.min = "0";
  input.step = "1000";
  form.appendChild(input);

  const submitButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å");
  form.appendChild(submitButton);

  const additionalButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–Ø –ø–æ–∫–∞ –Ω–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é");
  additionalButton.id = "salary__butt";
  form.appendChild(additionalButton);

  let salaryButtonClicked = false;

  additionalButton.addEventListener("click", function () {
    userAnswerContainer.innerHTML = "–≠—Ç–æ –Ω–µ –ø–æ–≤–æ–¥ –≥—Ä—É—Å—Ç–∏—Ç—å, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—à—É –∫–∞—Ä—å–µ—Ä–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞—á–Ω–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥! –ù–æ —Ä–∞–∑ —è –æ–±–µ—â–∞–ª –ø–æ–¥–∞—Ä–∫–∏, —Ç–æ –¥–ª—è –≤–∞—Å —É –º–µ–Ω—è —Ü–µ–ª—ã—Ö –¥–≤–∞ –ø–æ–¥–∞—Ä–∫–∞!<br> –í—ã–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫";

    const form = document.getElementById("salaryForm");
    if (form) {
      form.remove();
    }

    const giftButton1 = createElementWithClassAndText("button", "bot__giftButton", "–°–∫–∏–¥–∫–∞ –Ω–∞ 1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é 1000 —Ä—É–±.");
    const giftButton2 = createElementWithClassAndText("button", "bot__giftButton", "–ì–∞–π–¥ ‚Äú–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–≤–æ–µ–π –º–µ—á—Ç—ã‚Äù");

    userAnswerContainer.appendChild(giftButton1);
    userAnswerContainer.appendChild(giftButton2);

    giftButton1.addEventListener("click", function () {
      userAnswerContainer.innerHTML = "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –§–ò–û, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏–¥—É—Ç –∫ –≤–∞–º –Ω–∞ email.";

      const form = createGiftForm();
      userAnswerContainer.appendChild(form);
    });

    giftButton2.addEventListener("click", function () {
      userAnswerContainer.innerHTML = "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –§–ò–û, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏–¥—É—Ç –∫ –≤–∞–º –Ω–∞ email.";

      const form = createGiftForm();
      userAnswerContainer.appendChild(form);
    });
  });

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    submitSalaryForm();
  });

  return form;
}

async function submitSalaryForm() {
  const salaryValue = document.getElementById("salary").value;

  console.log("Salary submitted:", salaryValue);

  try {
    const postResponse = await fetch("http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: receivedId,
        salary: salaryValue,
      }),
    });

    const postData = await postResponse.json();
    console.log("POST Response data:", postData);

    if (postData) {
      handleSalarySuccess(); // Call the correct function here
    } else {
      handleSalaryError();
    }
  } catch (error) {
    console.error("Error:", error);
    handleSalaryError();
  }
}

function handleSalarySuccess() {
  console.log("Salary form submitted successfully!");

  const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", "–ë–ª–∞–≥–æ–¥–∞—Ä—é! –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é –í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?");
  userAnswerContainer.innerHTML = "";
  userAnswerContainer.appendChild(successMessage);

  const form = document.getElementById("salaryForm");
  if (form) {
    form.reset();
  }

  const input = document.createElement("input");
  input.type = "number";
  input.id = "hours";
  input.placeholder = "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏";
  input.min = "0";
  input.step = "1";
  userAnswerContainer.appendChild(input);

  const submitButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å");
  submitButton.addEventListener("click", function () {
    submitHoursForm(input.value);
  });
  userAnswerContainer.appendChild(submitButton);
}

/*async function submitHoursForm() {
  const hoursValue = document.getElementById("hours").value;

  console.log("Hours submitted:", hoursValue);

  try {
    const postResponse = await fetch("http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: receivedId,
        hours: hoursValue,
      }),
    });

    const postData = await postResponse.json();
    console.log("POST Response data:", postData);

    if (postData) {
      console.log("Hours form submitted successfully!");

      const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", "–í–æ—Ç –º—ã –∏ –Ω–∞ —Ñ–∏–Ω–∏—à–Ω–æ–π –ø—Ä—è–º–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç.");
      userAnswerContainer.innerHTML = "";
      userAnswerContainer.appendChild(successMessage);

      const oldInput = document.getElementById("hours");
      if (oldInput) {
        oldInput.remove();
      }

      const ageInput = document.createElement("input");
      ageInput.type = "number";
      ageInput.id = "age";
      ageInput.placeholder = "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏";
      ageInput.min = "0";
      ageInput.step = "1";
      userAnswerContainer.appendChild(ageInput);

      const submitButton = createElementWithClassAndText("button", "ansercontainer--user__2--form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å");
      submitButton.addEventListener("click", submitAgeForm);
      userAnswerContainer.appendChild(submitButton);
    } else {
      console.error("Error submitting hours form");
    }
  } catch (error) {
    console.error("Error:", error);
  }
}*/
async function submitHoursForm(hoursValue) {
  console.log("Hours submitted:", hoursValue);

  try {
    const postResponse = await fetch("http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: receivedId,
        hours: hoursValue,
      }),
    });

    const postData = await postResponse.json();
    console.log("POST Response data:", postData);

    if (postData) {
      console.log("Hours form submitted successfully!");

      //const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", `–û—Ç–ª–∏—á–Ω–æ! üôè<br><br>–ú—ã –ø–æ—Å—á–∏—Ç–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∞—Å–∞ –í–∞—à–µ–π —Ä–∞–±–æ—Ç—ã: ${earnings} —Ä—É–±/—á–∞—Å.<br>–ú–Ω–µ –±—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ —Å –≤–∞–º–∏ –æ–±—â–∞—Ç—å—Å—è!<br><br>–í–∞—à –ø–æ–¥–∞—Ä–æ–∫ —É–∂–µ –Ω–∞ –ø–æ—á—Ç–µ!<br><br>–ù–∞—à–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞–º –ø–æ–º–æ—á—å <a href='mailto:support@dezorientaciya.ru'>support@dezorientaciya.ru</a><br><br>–î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á!`);
      const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", `–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ üéÅ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –§–ò–û –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∞ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –∏—Ö  –Ω–∞ —ç–ª. –ø–æ—á—Ç—Éüëá`);
      userAnswerContainer.innerHTML = "";
      userAnswerContainer.appendChild(successMessage);

      // Display the form with name, phone, and email
      const form = createGiftForm();
      userAnswerContainer.appendChild(form);
    } else {
      console.error("Error submitting hours form");
    }
  } catch (error) {
    console.error("Error:", error);
  }
}

function handleSalaryError() {
  console.error("Error submitting salary form");
}

function createGiftForm() {
  const form = document.createElement("form");
  form.classList.add("gift__form");

  const nameInput = document.createElement("input");
  nameInput.type = "text";
  nameInput.placeholder = "–§–ò–û";
  nameInput.classList.add("name__bot");

  const telInput = document.createElement("input");
  telInput.type = "tel";
  telInput.placeholder = "–¢–µ–ª–µ—Ñ–æ–Ω";
  telInput.classList.add("tel__bot");

  const emailInput = document.createElement("input");
  emailInput.type = "email";
  emailInput.placeholder = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞";
  emailInput.classList.add("email__bot");

  const submitButton = createElementWithClassAndText("button", "gift__form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å");
  form.appendChild(nameInput);
  form.appendChild(telInput);
  form.appendChild(emailInput);
  form.appendChild(submitButton);

  submitButton.addEventListener("click", async function (e) {
    e.preventDefault();

    const formData = {
      name: nameInput.value,
      tel: telInput.value,
      email: emailInput.value,
    };

    try {
      const response = await fetch("http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      if (response.ok) {
        userAnswerContainer.innerHTML = "–ú–Ω–µ –±—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ —Å –≤–∞–º–∏ –æ–±—â–∞—Ç—å—Å—è!<br><br>–í–∞—à –ø–æ–¥–∞—Ä–æ–∫ —É–∂–µ –Ω–∞ –ø–æ—á—Ç–µ!<br><br>–ù–∞—à–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞–º –ø–æ–º–æ—á—å <a href='mailto:support@dezorientaciya.ru'>support@dezorientaciya.ru</a><br><br>–î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á!";

        form.style.display = "none";
      } else {
        console.error("Form submission failed:", response.statusText);
      }
    } catch (error) {
      console.error("Error submitting form:", error);
    }
  });

  return form;
}

function handleExperienceError() {
  console.error("Error submitting experience form");
}

function handleError() {
  const errorText = createElementWithClassAndHTML("div", "ansercontainer--user__text", "–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ");
  userAnswerContainer.innerHTML = "";
  userAnswerContainer.appendChild(errorText);

  const formContainer = document.querySelector(".ansercontainer--user__2");
  if (formContainer) {
    formContainer.classList.add("none");
  }
}

function handleSuccess() {
  console.log("Form submitted successfully!");
}

function createElementWithClassAndHTML(elementType, className, html) {
  const element = document.createElement(elementType);
  element.classList.add(className);
  element.innerHTML = html;
  return element;
}

function createForm() {
  const form = document.createElement("form");
  form.classList.add("ansercontainer--user__1--form");
  form.action = "http://hackatoncom6.ddns.net:7777/chat_bot_rest/client/";
  form.method = "POST";

  const inputs = [
    { type: "text", id: "namebot", name: "name", placeholder: "–ò–º—è –∏ –§–∞–º–∏–ª–∏—è", required: true },
    { type: "tel", id: "phonebot", name: "phone", placeholder: "–¢–µ–ª–µ—Ñ–æ–Ω" },
    { type: "email", id: "emailbot", name: "email", placeholder: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞" },
  ];

  inputs.forEach((inputData) => {
    const input = document.createElement("input");
    Object.entries(inputData).forEach(([key, value]) => (input[key] = value));
    form.appendChild(input);
  });

  const submitButton = createElementWithClassAndText("button", "ansercontainer--user__1--form__button", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É");
  form.appendChild(submitButton);

  form.addEventListener("submit", async function (e) {
    e.preventDefault();

    const nameValue = form.querySelector("#namebot").value;
    const phoneValue = form.querySelector("#phonebot").value;
    const emailValue = form.querySelector("#emailbot").value;

    if (nameValue && nameValue.trim() !== "" && (phoneValue || emailValue)) {
      const formData = {
        name: nameValue,
        phone: phoneValue,
        email: emailValue,
      };

      try {
        const response = await fetch(form.action, {
          method: form.method,
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        });

        const responseText = await response.text();
        console.log("Response content:", responseText);

        form.querySelector("#namebot").value = "";
        form.querySelector("#phonebot").value = "";
        form.querySelector("#emailbot").value = "";

        userAnswerContainer.innerHTML = "";

        const successMessage = createElementWithClassAndHTML("div", "ansercontainer--user__text", "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!<br><br>–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –≤–∞–º –ø–æ–∑–≤–æ–Ω—è—Ç!");
        userAnswerContainer.appendChild(successMessage);
      } catch (error) {
        console.error("Error submitting form:", error);
      }
    } else {
      if (!nameValue || nameValue.trim() === "") {
        setPlaceholderError(form.querySelector("#namebot"));
      }
      if (!phoneValue) {
        setPlaceholderError(form.querySelector("#phonebot"));
      }
      if (!emailValue) {
        setPlaceholderError(form.querySelector("#emailbot"));
      }
    }
  });

  return form;
}
const giftButton = document.querySelector(".section__five-button");
giftButton.addEventListener("click", openBot);
